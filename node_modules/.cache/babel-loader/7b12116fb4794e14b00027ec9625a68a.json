{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlu69\\\\OneDrive\\\\Desktop\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: \"1eec1296ed9b4137a35e3f624a9bf87a\"\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 6\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dlu69/OneDrive/Desktop/smart-brain/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: \"1eec1296ed9b4137a35e3f624a9bf87a\"\n});\n\nconst particlesOptions = {\n  \n    particles: {\n      number: {\n        value: 30,\n        density: {\n          enable: true,\n          value_area: 800\n        }\n      }\n    }\n  }\n\n  const initialState = {\n      input:'',\n      imageUrl:'',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n\n      }\n  }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    }\n  \n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n  \n  \n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputimage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  console.log(width, height);\n  return{\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n\n  }\n}\n\n\n\ndisplayFaceBox = (box) => {\nthis.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n onButtonSubmit = () => {\n   this.setState({imageUrl: this.state.input});\n   app.models.predict(\n     Clarifai.FACE_DETECT_MODEL,\n  this.state.input)\n  .then(response => {\n    if (response) {\n      fetch('http://localhost:3000/image', {\n        method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n        id: this.state.user.id\n        \n      })\n      })\n      .then(response => response.json())\n      .then(count => {\n        this.setState(Object.assign(this.state.user, { entries:\n          count}))\n      })\n    }\n\n    this.displayFaceBox(this.calculateFaceLocation(response))\n  })\n  .catch(err => console.log(err));\n }\n\n onRouteChange = (route) => {\n   if (route === 'signout') {\n     this.setState(initialState)\n   } else if (route === 'home') {\n     this.setState({isSignedIn: true})\n   }\n   this.setState({route: route});\n }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n  return (\n    <div className=\"App\">\n      <Particles className = 'particles'\n              params={particlesOptions}\n            />\n     <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n     { route === 'home' \n      ? <div>\n      <Logo />\n      <Rank \n      name={this.state.user.name}\n      entries={this.state.user.entries}\n      />\n      <ImageLinkForm \n      onInputChange={this.onInputChange} \n      onButtonSubmit={this.onButtonSubmit}\n      />\n      <FaceRecognition box={box} imageUrl={imageUrl} /> \n      </div>\n      : (\n        route === 'signin' \n        ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n      )\n  }\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}